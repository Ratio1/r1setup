---
- name: Restart Edge Node Services
  hosts: gpu_nodes
  become: true
  gather_facts: true
  vars:
    ansible_roles_path: "{{ playbook_dir }}/../roles"
  vars_files:
    - ../group_vars/all.yml
    - ../group_vars/vault.yml
    - ../group_vars/mnl.yml
    - ../group_vars/variables.yml
  tasks:
    - name: Check if service exists
      ansible.builtin.systemd:
        name: "{{ edge_node_service_name }}"
      register: service_exists
      ignore_errors: true

    - name: Display service not found error
      debug:
        msg: |
          ‚ùå ERROR: Service '{{ edge_node_service_name }}' not found on {{ inventory_hostname }}
          This usually means the edge node has not been deployed yet.
          Please run deployment first before restarting services.
      when: service_exists is failed

    - name: Fail if service doesn't exist
      fail:
        msg: "Service {{ edge_node_service_name }} not found on {{ inventory_hostname }}"
      when: service_exists is failed

    - name: Get current service status before restart
      ansible.builtin.systemd:
        name: "{{ edge_node_service_name }}"
      register: pre_restart_status
      ignore_errors: true
      when: service_exists is not failed

    - name: Display pre-restart status
      debug:
        msg: |
          Pre-restart status on {{ inventory_hostname }}: 
          {{ pre_restart_status.status.ActiveState | default('unknown') }}
      when: service_exists is not failed

    - name: Show pre-restart logs
      ansible.builtin.shell: |
        journalctl -u {{ edge_node_service_name }} -n 3 --no-pager
      register: pre_restart_logs
      ignore_errors: true
      when: service_exists is not failed

    - name: Display pre-restart logs
      debug:
        msg: |
          Pre-restart logs:
          {{ pre_restart_logs.stdout }}
      when: service_exists is not failed and pre_restart_logs.stdout is defined

    - name: Enable the edge node service (ensure it's enabled)
      ansible.builtin.systemd:
        name: "{{ edge_node_service_name }}"
        enabled: true
        daemon_reload: true
      when: service_exists is not failed

    - name: Restart the edge node service
      ansible.builtin.systemd:
        name: "{{ edge_node_service_name }}"
        state: restarted
      when: service_exists is not failed
      register: service_restart_result

    - name: Wait for service to be active after restart
      ansible.builtin.systemd:
        name: "{{ edge_node_service_name }}"
      register: service_status
      until: service_status.status.ActiveState == "active"
      retries: 30
      delay: 2
      when: service_exists is not failed

    - name: Verify Docker container is running after restart
      ansible.builtin.shell: |
        docker ps --filter "name={{ mnl_docker_container_name }}" --format "{{.Names}}\t{{.Status}}"
      register: container_check
      ignore_errors: true
      when: service_exists is not failed

    - name: Display restart success
      debug:
        msg: |
          ‚úÖ SUCCESS: Edge node service restarted on {{ inventory_hostname }}
          Service: {{ edge_node_service_name }}
          Status: {{ service_status.status.ActiveState | default('unknown') }}
          Auto-start: Enabled
          Container: {{ 'Running' if (mnl_docker_container_name in container_check.stdout) and ('Up' in container_check.stdout) else 'Not running properly' }}
      when: service_exists is not failed and service_status.status.ActiveState == "active"

    - name: Show post-restart logs
      ansible.builtin.shell: |
        journalctl -u {{ edge_node_service_name }} -n 5 --no-pager --since "30 seconds ago"
      register: post_restart_logs
      ignore_errors: true
      when: service_exists is not failed

    - name: Display post-restart logs
      debug:
        msg: |
          Post-restart logs (last 30 seconds):
          {{ post_restart_logs.stdout }}
      when: service_exists is not failed and post_restart_logs.stdout is defined

    - name: Service restart failure warning
      debug:
        msg: |
          ‚ö†Ô∏è  WARNING: Service may not have restarted properly on {{ inventory_hostname }}
          Current status: {{ service_status.status.ActiveState | default('unknown') }}
          Please check the logs for more details or try manual restart.
      when: service_exists is not failed and service_status.status.ActiveState != "active"

    - name: Display restart completion notice
      debug:
        msg: |
          üîÑ RESTART COMPLETED: Node {{ inventory_hostname }}
          ‚Ä¢ The edge node service has been restarted
          ‚Ä¢ Service should now be running with fresh configuration
          ‚Ä¢ Monitor logs to ensure stable operation
          ‚Ä¢ Node is back online and participating in the network
      when: service_exists is not failed and service_status.status.ActiveState == "active" 